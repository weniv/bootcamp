@use '@/styles/function.scss' as *;

.container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(28rem, 1fr));
  gap: 2.4rem 2.5rem;
}

.container,
.nodata {
  margin: fcSize(20, 40) auto 0;
}

.nodata {
  text-align: center;
  background-color: var(--grayLv1);
  color: var(--grayLv3);
  border-radius: 2rem;
  padding: 8rem;
}
.item {
  transition: transform 0.3s;
  transform-origin: 50% 100%;
  position: relative;

  @media (hover: hover) {
    &:hover {
      transform: scale(1.02);
    }
  }
  a {
    display: block;
    width: 100%;
    height: 100%;

    position: absolute;
    top: 0;
    left: 0;
    border-radius: 2rem;
    overflow: hidden;
    box-shadow: 0px 4px 40px 0px rgba(0, 0, 0, 0.08);
  }

  button {
    border-radius: 50%;
    position: relative;
    z-index: 10;
    background-color: var(--background);
  }
  .item-thumbnail {
    width: 100%;
    aspect-ratio: 380/200;
    object-fit: cover;
    border-bottom: 1px solid var(--grayLv2);
    border-radius: 2rem 2rem 0 0;
  }
  .item-content {
    padding: 2.8rem;
    font-size: fcSize(14, 16);
    display: flex;
    flex-direction: column;
    gap: 1.6rem;

    .item-content-tag,
    .item-content-period {
      color: var(--primary);
    }

    .item-content-tag {
      font-size: fcSize(12, 14);
      background-color: var(--activation);
      width: fit-content;
      padding: 1rem 1.6rem;
      border-radius: 2rem;
    }
    .item-content-title {
      font-size: fcSize(20, 24);
      @include ellipse(1, 1.4);
    }

    .item-content-desc {
      color: var(--grayLv4);

      @include ellipse(2);
    }

    .item-content-period {
      display: flex;
      gap: 0.8rem;
      align-items: center;
    }
  }
}

.flex-container {
  display: flex;
  gap: 0.8rem;
}
